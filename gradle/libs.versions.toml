[versions]
kotlin = "2.0.0-RC1"
compose-multiplatform = "1.6.2"
coroutines = "1.8.0"
kotlinx-serialization = "1.6.3"
junit = "4.13.2"
sqldelight = "2.0.1"
log4j2 = "2.23.1"
log4j2-kotlin = "1.4.0"
okio = "3.9.0"
molecule = "1.4.2"
turbine = "1.1.0"
multiplatform-settings = "1.1.1"
truth = "1.4.2"
itext = "8.0.3"

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }

[bundles]
log4j2 = ["log4j2-api", "log4j2-core"]
multiplatform-settings = ["multiplatform-settings", "multiplatform-settings-coroutines", "multiplatform-settings-serialization"]

[libraries]
junit = { module = "junit:junit", version.ref = "junit" }
truth = { module = "com.google.truth:truth", version.ref = "truth" }
coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "coroutines" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }

kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }

log4j2-api = { module = "org.apache.logging.log4j:log4j-api" }
log4j2-core = { module = "org.apache.logging.log4j:log4j-core", version.ref = "log4j2" }
log4j2-kotlin = { module = "org.apache.logging.log4j:log4j-api-kotlin", version.ref = "log4j2-kotlin" }

okio = { module = "com.squareup.okio:okio", version.ref = "okio" }
okio-test = { module = "com.squareup.okio:okio-fakefilesystem", version.ref = "okio" }

sqldelight-native = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight" }
sqldelight-sqlite = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqldelight" }
sqldelight-coroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight" }

molecule-gradle-plugin = { module = "app.cash.molecule:molecule-gradle-plugin", version.ref = "molecule" }
molecule-runtime = { module = "app.cash.molecule:molecule-runtime", version.ref = "molecule" }

turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }

multiplatform-settings = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "multiplatform-settings" }
multiplatform-settings-coroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "multiplatform-settings" }
multiplatform-settings-serialization = { module = "com.russhwolf:multiplatform-settings-serialization", version.ref = "multiplatform-settings" }
multiplatform-settings-test = { module = "com.russhwolf:multiplatform-settings-test", version.ref = "multiplatform-settings" }

itext = { module = "com.itextpdf:itext7-core", version.ref = "itext" }